name: Continuous Integration

on:
  pull_request:

jobs:
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up pip cache
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip- 
      - name: Install Hatch
        run: pipx install hatch
      - name: List Hatch environments
        run: hatch env show --ascii
      - name: Run unit tests with coverage
        run: hatch run test:unit-cov
        env:
          MIN_VALID_EVENTS: 10
          GOOGLE_APPLICATION_CREDENTIALS: tests/unit/fixtures/fake_credentials.json

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up pip cache
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip- 
      - name: Install Hatch
        run: pipx install hatch
      - name: List Hatch environments
        run: hatch env show --ascii
      - name: Lint
        run: hatch run lint:all

  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up pip cache
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip- 
      - name: Install Hatch
        run: pipx install hatch
      - name: List Hatch environments
        run: hatch env show --ascii
      - name: Audit
        run: hatch run audit:all

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up pip cache
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip- 
      - name: Install Hatch
        run: pipx install hatch
      - name: List Hatch environments
        run: hatch env show --ascii
      - name: Build
        run: hatch build

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/build-push-action@v5
      - name: Build Docker image
        run: make docker_build
